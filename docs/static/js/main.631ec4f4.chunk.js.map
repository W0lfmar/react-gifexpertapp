{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,sBAAMC,SAZU,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAOlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SApBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCTdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCXO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAuBvC,OAhBEC,qBAAU,WAEVxB,EAAQC,GACPwB,MAAM,SAAAC,GAEAH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIhB,CAACpB,IAKCqB,EDnBuBK,CAAa1B,GAA9Ba,EAJyB,EAI9BN,KAAYa,EAJkB,EAIlBA,QAMnB,OACI,qCACI,oBAAIJ,UAAU,sCAAd,SAAqDhB,IAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAGQA,GAFCA,EAAIC,aEqBtBgB,EAxCM,WAAM,MAIKzC,mBAAS,CAAC,cAJf,mBAIrB0C,EAJqB,KAIV3C,EAJU,KAe3B,OAEQ,cADJ,CACI,sBACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YC1BzB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.631ec4f4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    // e es igual al event\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        //console.log('Submit hecho')\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","    //peticion http\r\n    export const getGifs = async (category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=VvJUtJPAmm5j5HveTrwJ37oHaQGCz3zZ`;\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\"> \r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    //desestructuracion cambiando el nombre del data\r\n    // Llamando al customHook useFetchGifs\r\n    const {data:images,loading}= useFetchGifs(category);\r\n\r\n\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInUp\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\" >Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            // ...img envia los atributos por separado\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  \r\n   const [state, setState] = useState({\r\n       data:[],\r\n       loading:true\r\n   });\r\n\r\n     useEffect(() => {\r\n      //Llamando al helper que tiene la peticion web\r\n     getGifs(category)\r\n     .then( imgs => {\r\n      \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n\r\n     })   \r\n     }, [category]);\r\n\r\n\r\n\r\n\r\n   return state; // {data:[],loading:true};\r\n\r\n}\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    //Utilizando hook del useState\r\nconst[categories,setCategories]=useState(['One Punch']);\r\n\r\n// const handleAdd=()=>{\r\n//     // HunterXHunter \r\n//     // usando operador express ... \r\n//     // De esta manera estoy manteniendo las categorias anteriores\r\n//     // y agregando una nueva categoria\r\n//    // setCategories([...categories,'Trigun']);\r\n//    setCategories(cats=>[...cats,'Trigun']);\r\n// }\r\n\r\nreturn (\r\n    //mandando setCategories\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd} >Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                    <GifGrid\r\n                    key={category} \r\n                    category={category} \r\n                    />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//  GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr/>"],"sourceRoot":""}